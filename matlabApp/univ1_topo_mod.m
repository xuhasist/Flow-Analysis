clearvars
clearvars -global

global g
global IP
global flow
global link
global link_if
global nodeName
global sw_struct
global sw_number
global link_struct


% fat tree 
k = 4;
nodeCount = zeros(k.^2 + (k/2).^2 + 1753);
nodeName = {};

coreSw = (k/2).^2;
aggrSw = (k/2) * k;
edgeSw = (k/2) * k;
host = 1753;
sw_number = coreSw + aggrSw + edgeSw;

for i = 1:coreSw
    nodeName{i} = strcat('co-', int2str(i));
end

for i = 1+coreSw:coreSw+aggrSw
    nodeName{i} = strcat('ag-', int2str(i-(coreSw)));
end

for i = 1+coreSw+aggrSw:coreSw+aggrSw+edgeSw
    nodeName{i} = strcat('ed-', int2str(i-(coreSw+aggrSw)));
end

for i = 1+coreSw+aggrSw+edgeSw:coreSw+aggrSw+edgeSw+host
    nodeName{i} = strcat('h-', int2str(i-(coreSw+aggrSw+edgeSw)));
end

g = graph(nodeCount, nodeName);

srcNode = {};
dstNode = {};
srcInf = [];
dstInf = [];

for i = 1:(k/2)
    if_aggre = 1;
    
    for j = i:(k/2):coreSw
        if_core = 1;
        
        for m = i:(k/2):aggrSw
            g = addedge(g, strcat('co-', int2str(j)), strcat('ag-', int2str(m)), 100);
            
            srcNode = [srcNode; strcat('co-', int2str(j))];
            dstNode = [dstNode; strcat('ag-', int2str(m))];
            srcInf = [srcInf; if_core];
            dstInf = [dstInf; if_aggre];

            srcNode = [srcNode; strcat('ag-', int2str(m))];
            dstNode = [dstNode; strcat('co-', int2str(j))];
            srcInf = [srcInf; if_aggre];
            dstInf = [dstInf; if_core];
         
            if_core = if_core + 1;
        end
        
        if_aggre = if_aggre + 1;
    end
end

for i = 1:(k/2):aggrSw
    if_edge = 1;
    
    for j = i:(i+(k/2))-1
        if_aggre = (k/2)+1;
        
        for m = i:(i+(k/2))-1            
            g = addedge(g, strcat('ag-', int2str(j)), strcat('ed-', int2str(m)), 10);
            
            srcNode = [srcNode; strcat('ag-', int2str(j))];
            dstNode = [dstNode; strcat('ed-', int2str(m))];
            srcInf = [srcInf; if_aggre];
            dstInf = [dstInf; if_edge];

            srcNode = [srcNode; strcat('ed-', int2str(m))];
            dstNode = [dstNode; strcat('ag-', int2str(j))];
            srcInf = [srcInf; if_edge];
            dstInf = [dstInf; if_aggre];
            
            if_aggre = if_aggre + 1;
        end
        
        if_edge = if_edge + 1;
    end
end

host_at_pod(1:k) = round(host / k);
host_at_pod(end) = host - round(host / k)*(k-1);

host_c = 1;
for i = 1:(k/2):edgeSw
    host_at_sw(1:(k/2)) = round(host_at_pod(i-(k/2-1)*(floor(i/(k/2)))) / (k/2));
    host_at_sw(end) = host_at_pod(i-(k/2-1)*(floor(i/(k/2)))) - round(host_at_pod(i-(k/2-1)*(floor(i/(k/2)))) / (k/2))*(k/2-1);

    m = 1;
    for j = i:(i+(k/2))-1
        if_edge = (k/2)+1;
        
        for n = host_c:(host_c+host_at_sw(m))-1            
            g = addedge(g, strcat('ed-', int2str(j)), strcat('h-', int2str(n)), 1);  
            
            srcNode = [srcNode; strcat('ed-', int2str(j))];
            dstNode = [dstNode; strcat('h-', int2str(n))];
            srcInf = [srcInf; if_edge];
            dstInf = [dstInf; 1];

            srcNode = [srcNode; strcat('h-', int2str(n))];
            dstNode = [dstNode; strcat('ed-', int2str(j))];
            srcInf = [srcInf; 1];
            dstInf = [dstInf; if_edge];
            
            if_edge = if_edge + 1;
        end

        host_c = host_c + host_at_sw(m);
        m = m + 1;
    end
end

x(1:coreSw) = 1:floor(host/coreSw):floor(host/coreSw)*coreSw;
x(1+coreSw:coreSw+aggrSw) = 1:floor(host/aggrSw):floor(host/aggrSw)*aggrSw;
x(1+coreSw+aggrSw:coreSw+aggrSw+edgeSw) = 1:floor(host/edgeSw):floor(host/edgeSw)*edgeSw;
x(1+coreSw+aggrSw+edgeSw:coreSw+aggrSw+edgeSw+host) = 1:host;

y(1:coreSw) = 3;
y(1+coreSw:coreSw+aggrSw) = 2;
y(1+coreSw+aggrSw:coreSw+aggrSw+edgeSw) = 1;
y(1+coreSw+aggrSw+edgeSw:coreSw+aggrSw+edgeSw+host) = 0;

topo = plot(g, 'XData', x, 'YData', y);

IP = {'15.38.91.90', '15.56.128.106', '15.71.149.82', '15.71.149.89', '15.71.149.111', '15.71.149.241', '15.91.145.33', '15.128.184.13', '15.142.145.71', '15.164.117.145', '15.186.13.152', '15.186.110.132', '15.186.110.142', '15.186.110.188', '15.186.142.106', '15.186.142.176', '15.186.164.176', '15.186.164.220', '15.188.4.108', '15.217.118.116', '15.224.186.164', '16.51.241.142', '16.110.103.79', '16.167.71.83', '16.176.93.164', '16.186.210.108', '16.225.66.90', '16.225.224.127', '16.239.181.210', '18.22.43.17', '18.22.98.197', '18.22.130.128', '18.47.111.241', '18.68.48.77', '18.72.103.25', '18.72.241.210', '18.84.163.155', '18.91.139.55', '18.91.139.163', '18.106.157.150', '18.106.181.41', '18.106.202.119', '18.108.142.90', '18.122.15.113', '18.122.15.176', '18.122.117.184', '18.122.165.15', '18.122.165.186', '18.132.77.186', '18.132.156.254', '18.132.213.67', '18.141.108.164', '18.145.254.249', '18.161.41.201', '18.181.15.103', '18.181.79.116', '18.181.90.197', '18.181.118.103', '18.181.141.103', '18.181.151.91', '18.181.165.45', '18.181.168.132', '18.193.113.91', '18.197.164.160', '18.218.184.124', '18.224.142.80', '18.235.33.188', '18.252.249.20', '22.224.217.204', '26.15.98.230', '26.75.142.56', '26.90.111.103', '26.161.246.248', '26.164.251.75', '26.168.84.156', '26.202.95.117', '26.209.160.71', '26.210.204.204', '26.252.106.247', '30.105.106.215', '30.118.155.55', '30.222.71.108', '33.239.68.39', '39.16.17.94', '39.61.39.98', '39.61.39.160', '39.61.39.192', '39.77.57.224', '39.91.160.220', '39.124.68.181', '40.26.47.156', '40.26.230.139', '40.75.244.108', '40.105.22.197', '40.117.122.151', '40.117.246.210', '40.138.160.255', '40.193.23.224', '40.193.92.188', '40.193.220.98', '40.193.255.164', '40.202.90.203', '40.208.197.135', '40.248.75.188', '40.248.75.193', '40.248.176.156', '40.248.176.176', '40.248.244.34', '40.248.244.39', '40.248.244.64', '40.248.244.121', '40.248.244.254', '41.39.160.77', '41.39.218.67', '41.40.37.141', '41.43.180.128', '41.48.186.199', '41.55.218.71', '41.64.57.239', '41.64.217.244', '41.66.68.30', '41.102.82.3', '41.102.253.4', '41.106.90.203', '41.111.71.241', '41.113.177.123', '41.122.143.43', '41.122.241.239', '41.151.113.41', '41.151.199.18', '41.177.2.124', '41.177.3.75', '41.177.3.81', '41.177.3.89', '41.177.3.113', '41.177.3.117', '41.177.3.145', '41.177.3.203', '41.177.3.215', '41.177.3.224', '41.177.3.241', '41.177.4.139', '41.177.4.155', '41.177.4.167', '41.177.12.85', '41.177.17.77', '41.177.23.152', '41.177.24.108', '41.177.24.203', '41.177.24.224', '41.177.24.241', '41.177.25.51', '41.177.26.13', '41.177.26.15', '41.177.26.23', '41.177.26.46', '41.177.26.55', '41.177.26.72', '41.177.26.84', '41.177.26.91', '41.177.26.92', '41.177.26.117', '41.177.26.151', '41.177.26.155', '41.177.26.176', '41.177.26.184', '41.177.26.188', '41.177.26.193', '41.177.26.209', '41.177.26.210', '41.177.31.176', '41.177.31.197', '41.177.33.33', '41.177.34.157', '41.177.34.163', '41.177.40.39', '41.177.40.117', '41.177.40.224', '41.177.41.157', '41.177.43.100', '41.177.46.138', '41.177.46.193', '41.177.66.219', '41.177.68.4', '41.177.71.0', '41.177.71.26', '41.177.71.210', '41.177.75.18', '41.177.75.71', '41.177.75.117', '41.177.75.120', '41.177.77.111', '41.177.77.222', '41.177.82.48', '41.177.83.56', '41.177.83.247', '41.177.92.61', '41.177.98.31', '41.177.98.38', '41.177.98.43', '41.177.98.57', '41.177.98.79', '41.177.98.92', '41.177.98.98', '41.177.98.121', '41.177.98.127', '41.177.98.141', '41.177.98.142', '41.177.98.156', '41.177.98.176', '41.177.98.220', '41.177.98.252', '41.177.100.83', '41.177.102.106', '41.177.108.224', '41.177.110.95', '41.177.110.130', '41.177.111.45', '41.177.111.161', '41.177.111.194', '41.177.116.45', '41.177.117.136', '41.177.117.184', '41.177.121.241', '41.177.124.47', '41.177.132.22', '41.177.135.193', '41.177.135.197', '41.177.138.26', '41.177.138.80', '41.177.142.211', '41.177.143.210', '41.177.143.229', '41.177.153.71', '41.177.154.67', '41.177.154.154', '41.177.155.81', '41.177.155.91', '41.177.155.94', '41.177.159.26', '41.177.159.194', '41.177.159.202', '41.177.160.186', '41.177.161.3', '41.177.161.64', '41.177.161.91', '41.177.161.108', '41.177.164.68', '41.177.164.128', '41.177.168.46', '41.177.168.118', '41.177.168.139', '41.177.168.141', '41.177.168.181', '41.177.168.254', '41.177.176.38', '41.177.176.67', '41.177.176.98', '41.177.176.106', '41.177.176.156', '41.177.176.181', '41.177.176.188', '41.177.176.197', '41.177.176.198', '41.177.176.224', '41.177.177.214', '41.177.181.81', '41.177.181.105', '41.177.186.56', '41.177.186.136', '41.177.192.117', '41.177.194.24', '41.177.194.48', '41.177.194.117', '41.177.194.177', '41.177.194.186', '41.177.199.139', '41.177.199.254', '41.177.202.89', '41.177.202.193', '41.177.202.202', '41.177.202.235', '41.177.202.249', '41.177.204.209', '41.177.211.31', '41.177.211.68', '41.177.211.84', '41.177.211.106', '41.177.211.156', '41.177.211.160', '41.177.211.185', '41.177.211.208', '41.177.211.213', '41.177.219.108', '41.177.223.39', '41.177.223.45', '41.177.223.90', '41.177.224.2', '41.177.224.82', '41.177.230.40', '41.177.230.91', '41.177.230.128', '41.177.230.130', '41.177.230.142', '41.177.230.151', '41.177.230.176', '41.177.230.209', '41.177.230.224', '41.177.230.253', '41.177.231.92', '41.177.235.218', '41.177.239.153', '41.177.241.108', '41.177.241.176', '41.177.244.40', '41.177.244.41', '41.177.244.120', '41.177.244.241', '41.177.246.48', '41.177.247.89', '41.177.247.161', '41.177.247.210', '41.177.247.224', '41.177.247.242', '41.177.248.135', '41.177.251.22', '41.177.251.248', '41.177.254.197', '41.180.194.108', '41.185.160.98', '41.194.13.186', '41.197.160.204', '41.202.64.43', '41.235.38.38', '43.106.84.108', '43.106.84.231', '46.51.40.217', '46.67.123.218', '46.68.193.25', '46.84.142.165', '46.90.91.151', '46.90.205.219', '46.90.215.139', '46.91.85.106', '46.98.57.164', '46.111.244.79', '46.116.153.77', '46.116.176.81', '46.142.20.230', '46.142.108.68', '46.144.210.156', '46.186.151.231', '46.197.72.79', '46.197.119.41', '46.208.138.118', '46.210.16.12', '46.214.12.26', '46.214.34.145', '46.214.41.48', '46.214.46.41', '46.214.61.253', '46.214.75.153', '46.215.225.90', '46.218.47.132', '46.224.210.75', '46.224.211.31', '46.224.239.67', '46.253.38.253', '47.38.254.142', '47.167.160.20', '47.235.113.15', '48.17.210.22', '48.46.77.186', '48.46.90.202', '48.90.81.188', '48.117.143.192', '48.141.92.239', '48.142.224.41', '48.151.224.57', '48.151.224.64', '48.151.224.106', '48.151.224.205', '48.151.229.13', '48.151.229.22', '48.151.229.67', '48.151.229.142', '48.151.229.213', '48.151.229.224', '48.159.130.156', '48.167.251.156', '48.176.68.231', '48.185.57.194', '48.205.100.145', '48.211.223.72', '48.224.197.18', '48.225.41.164', '48.235.16.202', '48.235.66.119', '55.12.199.254', '55.161.39.39', '55.161.39.98', '55.214.68.188', '61.194.168.142', '66.4.225.56', '66.81.41.215', '67.2.255.56', '67.18.41.68', '67.22.210.0', '67.22.210.20', '67.22.210.40', '67.22.210.83', '67.22.210.108', '67.22.210.119', '67.22.210.142', '67.22.210.152', '67.22.210.188', '67.22.210.202', '67.22.210.209', '67.22.210.218', '67.22.210.242', '67.106.123.26', '67.119.211.204', '67.121.153.82', '67.231.84.39', '68.3.152.209', '68.22.30.22', '68.26.231.39', '68.26.231.43', '68.33.51.198', '68.33.66.110', '68.33.110.51', '68.33.110.176', '68.33.111.24', '68.33.164.161', '68.33.164.254', '68.33.186.67', '68.33.217.43', '68.33.224.93', '68.37.79.224', '68.39.224.203', '68.41.105.164', '68.55.26.255', '68.67.254.66', '68.80.156.163', '68.83.39.68', '68.83.197.15', '68.83.203.201', '68.89.213.164', '68.100.165.108', '68.122.18.43', '68.142.57.3', '68.142.180.119', '68.157.15.3', '68.157.15.41', '68.157.15.43', '68.157.15.122', '68.157.77.34', '68.157.77.37', '68.157.77.94', '68.157.77.167', '68.157.77.203', '68.157.77.231', '68.157.77.255', '68.157.145.13', '68.157.145.106', '68.157.145.118', '68.157.168.0', '68.157.168.2', '68.157.168.3', '68.157.168.4', '68.157.168.13', '68.157.168.16', '68.157.168.17', '68.157.168.22', '68.157.168.23', '68.157.168.24', '68.157.168.26', '68.157.168.38', '68.157.168.39', '68.157.168.40', '68.157.168.41', '68.157.168.43', '68.157.168.45', '68.157.168.46', '68.157.168.47', '68.157.168.48', '68.157.168.51', '68.157.168.55', '68.157.168.57', '68.157.168.61', '68.157.168.67', '68.157.168.72', '68.157.168.75', '68.157.168.77', '68.157.168.80', '68.157.168.82', '68.157.168.84', '68.157.168.89', '68.157.168.91', '68.157.168.93', '68.157.168.94', '68.157.168.95', '68.157.168.98', '68.157.168.102', '68.157.168.106', '68.157.168.108', '68.157.168.110', '68.157.168.111', '68.157.168.113', '68.157.168.116', '68.157.168.117', '68.157.168.120', '68.157.168.121', '68.157.168.132', '68.157.168.135', '68.157.168.136', '68.157.168.139', '68.157.168.141', '68.157.168.142', '68.157.168.144', '68.157.168.145', '68.157.168.153', '68.157.168.154', '68.157.168.156', '68.157.168.157', '68.157.168.159', '68.157.168.160', '68.157.168.163', '68.157.168.164', '68.157.168.167', '68.157.168.176', '68.157.168.177', '68.157.168.184', '68.157.168.186', '68.157.168.192', '68.157.168.194', '68.157.168.197', '68.157.168.198', '68.157.168.199', '68.157.168.202', '68.157.168.203', '68.157.168.204', '68.157.168.209', '68.157.168.210', '68.157.168.213', '68.157.168.218', '68.157.168.219', '68.157.168.222', '68.157.168.224', '68.157.168.225', '68.157.168.231', '68.157.168.241', '68.157.168.242', '68.157.168.252', '68.157.168.253', '68.157.168.254', '68.159.161.82', '68.159.161.120', '68.159.161.155', '68.167.13.160', '68.176.57.177', '68.203.230.141', '68.213.241.132', '68.224.16.165', '68.231.47.57', '68.244.77.2', '68.247.151.22', '71.31.117.203', '71.67.72.108', '71.138.108.48', '71.193.83.117', '72.26.17.150', '72.128.24.17', '72.220.84.16', '75.43.106.122', '75.43.197.244', '75.215.255.201', '77.48.77.157', '77.55.145.124', '77.71.145.77', '77.72.177.204', '77.84.188.198', '77.91.159.163', '77.100.176.197', '77.121.241.20', '77.145.142.202', '77.149.202.224', '77.155.33.128', '77.156.160.244', '77.161.130.31', '77.164.201.106', '77.167.38.214', '77.180.71.18', '77.197.13.3', '77.197.13.16', '77.197.13.48', '77.197.13.56', '77.197.13.151', '77.197.13.211', '77.197.16.31', '77.197.30.68', '77.197.67.224', '77.197.106.128', '77.197.177.153', '77.197.177.241', '77.204.105.111', '77.210.164.197', '77.248.253.160', '79.46.215.71', '79.46.215.185', '79.230.142.72', '80.132.186.142', '80.219.154.15', '81.30.197.204', '81.67.210.26', '81.67.217.159', '82.83.176.151', '82.242.77.41', '82.242.77.92', '82.242.77.108', '82.242.77.188', '82.242.98.77', '82.242.98.98', '82.242.98.106', '83.71.46.203', '83.155.208.75', '85.26.113.153', '85.41.34.188', '85.57.18.18', '85.123.231.0', '85.141.12.209', '85.149.4.209', '85.150.255.128', '85.186.40.192', '85.186.116.57', '85.186.156.144', '85.210.22.106', '85.210.77.218', '85.224.39.201', '85.224.40.142', '85.224.210.152', '85.241.98.37', '89.47.98.208', '89.47.224.123', '89.47.224.211', '89.47.224.241', '89.47.253.220', '89.79.2.177', '89.160.185.98', '90.4.77.0', '90.18.177.176', '90.38.138.177', '90.38.138.255', '90.38.224.130', '90.38.224.197', '90.38.224.218', '90.38.239.122', '90.39.23.113', '90.41.154.164', '90.47.150.160', '90.55.22.176', '90.55.26.149', '90.55.118.75', '90.55.161.141', '90.55.244.16', '90.55.244.176', '90.71.239.118', '90.79.111.26', '90.80.188.164', '90.103.17.55', '90.103.254.253', '90.111.142.151', '90.142.18.154', '90.150.203.4', '90.153.164.100', '90.163.247.188', '90.167.222.57', '90.209.229.168', '90.210.15.13', '90.210.201.51', '90.210.201.106', '90.210.201.152', '90.210.201.231', '90.210.213.91', '90.210.213.119', '90.210.220.108', '90.218.41.209', '90.218.55.117', '90.218.72.90', '90.218.72.95', '90.218.82.164', '90.218.110.75', '90.218.155.193', '90.218.193.20', '90.219.197.123', '90.230.38.219', '91.34.155.43', '91.75.12.241', '91.91.91.91', '91.192.43.193', '91.197.77.193', '91.213.160.92', '92.71.130.116', '92.188.204.106', '92.188.204.180', '92.244.186.20', '94.2.202.75', '94.2.202.197', '94.2.202.203', '94.145.176.224', '94.209.244.110', '94.209.244.210', '94.224.184.106', '95.34.105.67', '95.95.209.41', '95.128.210.77', '100.176.176.24', '100.176.176.55', '100.176.176.56', '100.176.176.67', '100.176.176.72', '100.176.176.80', '100.176.176.176', '100.176.176.177', '100.176.176.186', '100.176.176.193', '100.176.176.198', '100.176.176.202', '100.176.176.204', '100.176.176.235', '100.176.176.244', '100.176.176.246', '100.176.176.249', '103.43.113.211', '105.2.106.241', '105.144.38.116', '105.144.38.121', '105.144.38.192', '105.144.38.197', '105.144.38.203', '105.144.38.251', '106.37.181.3', '106.108.55.143', '106.142.210.13', '106.176.210.26', '106.217.244.253', '106.248.160.192', '110.177.219.113', '111.98.75.211', '111.211.13.12', '111.219.194.75', '117.2.108.254', '117.3.4.67', '117.4.3.176', '117.12.72.43', '117.41.3.90', '117.46.91.41', '117.47.56.26', '117.61.72.160', '117.75.93.67', '117.85.0.45', '117.85.30.98', '117.85.152.34', '117.85.152.98', '117.98.46.22', '117.98.57.20', '117.98.154.128', '117.105.254.41', '117.108.149.121', '117.117.48.192', '117.142.108.77', '117.142.224.13', '117.142.224.176', '117.143.55.17', '117.143.106.192', '117.152.210.203', '117.154.156.121', '117.160.23.211', '117.160.201.180', '117.164.142.222', '117.167.26.225', '117.181.203.106', '117.188.111.67', '117.192.151.205', '117.193.17.249', '117.194.75.153', '117.194.90.57', '117.194.116.117', '117.194.194.71', '117.208.13.164', '117.208.185.203', '117.211.12.151', '117.218.34.176', '117.218.68.64', '117.218.124.66', '117.218.184.106', '117.219.119.201', '117.224.138.121', '117.241.181.141', '117.244.108.91', '117.244.241.116', '117.246.95.43', '117.251.118.229', '117.254.67.71', '117.255.177.145', '118.20.37.102', '118.47.40.77', '118.57.168.224', '118.72.57.55', '118.89.248.213', '118.110.211.80', '118.151.64.164', '118.239.23.186', '119.235.82.224', '120.177.47.83', '122.15.144.209', '122.20.84.82', '122.37.124.39', '122.37.124.201', '122.39.210.202', '122.40.186.156', '122.40.244.176', '122.57.210.34', '122.57.210.253', '122.68.186.249', '122.72.157.199', '122.77.41.164', '122.77.41.192', '122.77.43.192', '122.106.160.201', '122.142.194.46', '122.155.95.176', '122.155.141.12', '122.202.210.108', '122.241.95.77', '122.248.218.77', '122.248.218.117', '122.248.218.241', '124.41.61.203', '124.142.184.13', '124.142.184.77', '124.142.184.164', '124.142.184.176', '124.181.254.38', '124.201.18.184', '124.224.117.159', '128.30.214.39', '128.37.93.202', '128.45.176.41', '128.67.93.46', '128.71.90.75', '128.71.90.116', '128.71.90.164', '128.71.90.230', '128.71.90.255', '128.75.149.46', '128.75.149.82', '128.75.149.108', '128.75.149.197', '128.75.149.203', '128.75.149.224', '128.83.72.150', '128.83.77.90', '128.83.213.253', '128.106.80.197', '128.106.219.17', '128.106.248.12', '128.117.193.105', '128.123.176.192', '128.164.13.31', '128.164.13.251', '128.164.108.251', '128.164.108.254', '128.164.254.31', '128.164.254.90', '128.235.22.253', '128.239.56.139', '130.138.194.197', '141.3.204.164', '141.13.210.224', '141.16.210.244', '141.152.108.165', '141.231.176.176', '142.64.34.20', '142.117.244.30', '142.119.235.210', '142.197.83.75', '142.203.176.144', '142.205.81.17', '142.218.45.13', '142.222.198.142', '142.224.4.75', '142.224.111.68', '142.230.167.201', '142.247.239.77', '142.254.142.105', '145.2.71.31', '145.20.13.79', '145.41.176.124', '145.67.149.81', '145.67.149.128', '145.67.150.3', '145.67.150.150', '145.67.161.67', '145.67.161.90', '145.67.194.47', '145.67.194.231', '145.67.223.161', '145.77.84.127', '145.95.31.210', '145.95.39.176', '145.95.41.31', '145.95.41.251', '145.95.43.224', '145.95.64.224', '145.95.67.26', '145.95.67.106', '145.95.72.23', '145.95.75.67', '145.95.75.253', '145.95.81.118', '145.95.84.122', '145.95.108.55', '145.95.110.203', '145.95.120.12', '145.95.139.141', '145.95.142.193', '145.95.142.197', '145.95.149.185', '145.95.168.155', '145.95.176.229', '145.95.209.239', '145.95.230.176', '145.111.95.56', '145.111.176.77', '145.116.45.111', '145.116.64.192', '145.132.254.241', '145.141.40.72', '145.160.39.192', '145.164.155.24', '145.164.167.201', '145.164.185.68', '145.167.55.72', '145.167.224.160', '145.193.186.246', '145.202.26.34', '145.202.83.94', '145.202.188.141', '145.202.231.208', '145.208.77.199', '145.215.77.142', '145.219.142.106', '145.223.161.150', '145.223.192.40', '145.223.244.45', '145.231.193.210', '145.235.111.2', '145.244.128.210', '149.24.194.204', '149.186.108.47', '149.214.94.39', '149.214.94.43', '149.214.94.57', '149.214.94.64', '149.214.94.75', '149.214.94.77', '149.214.94.98', '149.214.94.116', '149.214.94.164', '149.214.94.192', '149.214.94.203', '149.214.94.230', '149.214.94.253', '149.214.94.255', '149.214.203.77', '149.214.203.116', '150.81.145.117', '151.24.40.249', '151.24.80.186', '151.24.224.197', '151.41.242.13', '151.43.176.40', '151.43.219.0', '151.43.219.4', '151.43.219.211', '151.45.105.66', '151.57.67.43', '151.77.12.31', '151.77.12.46', '151.77.12.75', '151.77.26.188', '151.77.31.95', '151.77.39.25', '151.77.41.204', '151.77.41.211', '151.77.47.100', '151.77.47.154', '151.77.51.122', '151.77.64.199', '151.77.67.48', '151.77.75.15', '151.77.75.17', '151.77.75.108', '151.77.75.123', '151.77.108.98', '151.77.108.215', '151.77.116.41', '151.77.118.46', '151.77.120.167', '151.77.127.218', '151.77.135.33', '151.77.135.71', '151.77.135.142', '151.77.135.230', '151.77.136.204', '151.77.139.56', '151.77.142.71', '151.77.142.94', '151.77.150.79', '151.77.151.38', '151.77.151.91', '151.77.151.241', '151.77.160.197', '151.77.164.120', '151.77.176.149', '151.77.176.164', '151.77.176.244', '151.77.185.176', '151.77.192.75', '151.77.192.83', '151.77.193.248', '151.77.197.57', '151.77.205.22', '151.77.205.241', '151.77.210.188', '151.77.217.75', '151.77.241.119', '151.77.241.157', '151.83.41.143', '151.117.159.151', '151.124.157.40', '151.138.223.72', '151.142.22.213', '151.155.219.160', '151.186.230.151', '151.197.188.84', '151.197.241.176', '151.239.66.180', '151.239.142.67', '151.241.241.80', '151.241.241.198', '153.43.165.205', '153.142.218.48', '153.160.160.108', '153.209.165.17', '154.46.46.160', '154.80.248.130', '154.105.77.57', '154.108.181.150', '154.130.246.40', '154.197.244.38', '156.149.75.79', '156.149.106.197', '156.225.203.83', '161.164.218.26', '161.164.218.89', '161.164.253.18', '164.15.26.84', '164.218.77.217', '165.13.68.199', '165.16.211.224', '165.33.138.84', '165.41.66.223', '165.41.202.108', '165.90.154.203', '165.138.81.197', '165.138.142.31', '165.138.241.222', '165.138.242.66', '165.142.15.43', '165.160.217.193', '165.188.210.111', '165.210.204.46', '168.22.64.48', '168.22.108.71', '168.22.145.23', '168.22.164.224', '168.22.180.30', '168.22.180.46', '168.22.180.55', '168.22.205.0', '168.22.224.26', '168.24.117.214', '168.26.30.180', '168.26.41.81', '168.46.71.113', '168.72.165.153', '168.82.241.192', '168.91.31.2', '168.91.90.164', '168.91.164.123', '168.93.111.198', '168.111.100.91', '168.117.3.145', '168.117.123.48', '168.117.123.202', '168.117.132.197', '168.159.143.225', '168.181.152.57', '168.188.229.144', '168.197.181.102', '168.197.181.210', '168.198.48.241', '168.204.247.102', '168.223.67.89', '168.224.47.72', '176.41.89.90', '176.41.89.121', '176.41.89.210', '176.81.0.71', '176.165.155.160', '176.186.164.117', '176.186.164.130', '176.186.164.145', '177.0.130.160', '177.117.231.108', '177.124.75.164', '177.149.224.75', '177.180.108.25', '177.202.64.15', '177.213.85.47', '181.116.135.215', '181.163.75.192', '181.181.94.22', '184.4.66.37', '184.4.77.132', '184.75.144.211', '184.75.203.161', '184.75.203.180', '184.117.3.201', '184.217.156.252', '184.219.161.142', '186.12.213.98', '186.18.40.72', '186.31.217.160', '186.40.160.211', '186.48.161.253', '186.51.41.244', '186.67.155.161', '186.67.235.220', '186.92.64.230', '186.116.68.136', '186.136.103.68', '186.149.202.75', '186.181.13.208', '186.181.116.61', '186.181.210.108', '186.186.244.202', '186.194.48.167', '186.205.77.68', '186.210.249.155', '186.217.218.141', '186.222.111.143', '186.248.123.139', '188.23.185.217', '188.68.72.38', '188.68.72.40', '188.68.72.41', '188.68.72.48', '188.68.72.71', '188.68.72.72', '188.68.72.93', '188.68.72.218', '188.68.72.247', '188.68.161.43', '188.68.161.130', '188.68.193.77', '188.68.193.91', '188.68.193.106', '188.68.193.209', '188.68.211.186', '188.68.211.244', '188.68.211.254', '188.68.214.108', '188.68.214.181', '188.135.18.141', '193.77.145.67', '193.92.108.108', '193.135.161.57', '194.23.108.2', '194.31.224.39', '194.66.3.41', '194.66.3.119', '194.92.16.244', '194.143.3.213', '194.150.26.75', '194.157.180.72', '194.157.217.26', '194.157.248.198', '194.180.123.197', '194.188.22.210', '194.210.242.117', '194.220.77.40', '194.220.77.102', '194.220.77.203', '194.220.251.152', '194.224.157.64', '197.33.67.71', '197.33.77.163', '197.33.103.47', '197.33.149.72', '197.33.149.108', '197.33.149.117', '197.33.149.151', '197.33.149.197', '197.33.223.168', '197.33.223.253', '197.43.39.108', '197.43.241.241', '197.45.108.197', '197.46.118.186', '197.90.218.77', '197.93.95.77', '197.98.202.224', '197.154.111.177', '197.154.128.43', '197.154.128.197', '197.154.210.34', '197.154.210.84', '197.154.223.202', '197.176.159.116', '197.193.211.106', '197.241.94.3', '198.23.139.4', '198.23.204.161', '198.39.244.48', '198.43.225.34', '198.47.241.110', '198.67.15.98', '198.123.241.156', '198.130.142.77', '198.161.204.180', '198.204.164.75', '198.208.198.164', '198.218.247.210', '198.222.72.194', '198.222.241.108', '198.230.181.241', '203.18.254.116', '203.22.106.220', '203.26.239.117', '203.30.181.224', '203.61.186.165', '203.68.39.94', '203.68.108.55', '203.68.155.186', '203.68.155.197', '203.68.155.213', '203.84.176.47', '203.95.211.244', '203.111.205.139', '203.116.153.164', '203.116.165.164', '203.117.192.197', '203.138.160.239', '203.188.177.164', '203.193.176.20', '203.193.244.159', '203.194.197.13', '203.203.224.165', '203.218.3.108', '203.218.122.186', '204.22.67.156', '204.31.239.139', '204.41.197.117', '204.48.176.121', '204.244.123.117', '208.51.205.98', '208.185.210.90', '209.43.22.119', '209.47.155.41', '209.47.155.57', '209.111.180.201', '209.117.180.244', '209.160.71.118', '209.164.161.18', '209.186.77.118', '209.186.77.210', '209.224.176.100', '209.244.151.89', '209.254.202.203', '209.254.255.22', '210.80.3.188', '210.90.111.210', '210.176.151.45', '210.218.218.3', '210.218.218.164', '213.197.255.209', '213.230.215.23', '213.253.0.197', '214.26.117.94', '214.40.108.199', '215.13.66.186', '215.20.82.113', '215.43.45.145', '215.48.108.144', '215.83.186.106', '215.108.141.0', '215.108.213.139', '215.117.15.201', '215.122.20.75', '215.128.55.203', '215.141.185.17', '215.144.80.181', '215.144.225.110', '215.151.186.136', '215.160.91.82', '215.203.57.16', '215.203.64.144', '215.210.225.208', '215.224.55.83', '215.224.91.90', '215.224.151.209', '215.224.161.57', '215.244.105.12', '215.244.186.71', '218.218.218.218', '219.24.164.79', '219.24.194.113', '219.24.210.209', '219.24.217.18', '219.39.197.43', '219.72.246.202', '219.157.4.3', '219.160.224.138', '219.186.34.128', '219.241.64.202', '220.57.41.176', '220.75.210.210', '220.198.210.23', '220.218.167.51', '222.80.244.164', '222.93.142.51', '222.198.106.208', '223.24.248.223', '223.72.203.218', '223.198.244.193', '223.219.184.43', '223.219.254.224', '224.15.77.128', '224.66.24.201', '224.67.142.255', '224.144.39.194', '224.203.77.242', '224.218.138.155', '224.224.145.94', '224.241.255.13', '225.106.194.46', '225.108.160.164', '225.108.160.193', '225.116.91.43', '225.116.106.161', '225.116.251.43', '225.139.72.145', '225.176.91.224', '225.176.204.185', '225.185.165.197', '239.91.255.33', '239.91.255.48', '239.91.255.55', '239.91.255.122', '239.91.255.128', '239.91.255.186', '239.91.255.197', '239.91.255.198', '239.152.255.47', '239.152.255.68', '239.152.255.72', '239.231.38.98', '241.3.142.157', '241.3.176.111', '241.18.188.34', '241.22.132.84', '241.22.194.12', '241.37.188.98', '241.57.75.253', '241.57.77.253', '241.57.116.43', '241.57.255.98', '241.57.255.253', '241.66.224.167', '241.67.244.64', '241.77.176.57', '241.82.68.241', '241.82.110.106', '241.82.197.177', '241.82.197.204', '241.84.91.157', '241.91.41.247', '241.117.39.77', '241.122.106.43', '241.153.75.13', '241.153.142.13', '241.176.102.167', '241.177.251.108', '241.180.95.220', '241.181.18.119', '241.194.149.64', '241.197.13.98', '241.197.218.123', '241.203.100.24', '241.203.224.47', '241.204.253.181', '241.209.106.77', '241.217.223.138', '241.244.47.230', '241.254.56.202', '242.31.160.12', '242.31.218.203', '242.64.186.142', '242.64.224.220', '242.120.92.34', '242.161.82.241', '242.254.218.67', '244.3.0.161', '244.3.0.213', '244.3.3.77', '244.3.3.145', '244.3.4.203', '244.3.22.119', '244.3.25.102', '244.3.31.26', '244.3.31.40', '244.3.31.46', '244.3.31.75', '244.3.31.108', '244.3.31.117', '244.3.31.156', '244.3.31.168', '244.3.34.41', '244.3.39.117', '244.3.40.84', '244.3.40.203', '244.3.41.84', '244.3.41.117', '244.3.46.254', '244.3.48.41', '244.3.56.84', '244.3.56.90', '244.3.57.231', '244.3.66.67', '244.3.67.108', '244.3.75.66', '244.3.75.157', '244.3.77.92', '244.3.77.145', '244.3.77.211', '244.3.77.218', '244.3.79.41', '244.3.79.45', '244.3.79.47', '244.3.79.51', '244.3.79.102', '244.3.79.122', '244.3.79.123', '244.3.79.141', '244.3.79.142', '244.3.79.161', '244.3.79.165', '244.3.79.197', '244.3.79.199', '244.3.79.215', '244.3.83.75', '244.3.84.197', '244.3.84.219', '244.3.85.17', '244.3.90.4', '244.3.90.22', '244.3.90.25', '244.3.90.67', '244.3.90.180', '244.3.90.185', '244.3.90.224', '244.3.90.239', '244.3.90.251', '244.3.93.81', '244.3.93.100', '244.3.93.142', '244.3.93.197', '244.3.93.210', '244.3.93.229', '244.3.93.239', '244.3.95.152', '244.3.95.176', '244.3.108.48', '244.3.116.214', '244.3.117.184', '244.3.117.197', '244.3.117.244', '244.3.124.91', '244.3.142.38', '244.3.142.100', '244.3.142.106', '244.3.142.210', '244.3.145.123', '244.3.145.156', '244.3.151.202', '244.3.153.0', '244.3.153.13', '244.3.153.25', '244.3.153.30', '244.3.153.33', '244.3.153.34', '244.3.153.40', '244.3.153.41', '244.3.153.48', '244.3.153.55', '244.3.153.56', '244.3.153.77', '244.3.153.91', '244.3.153.102', '244.3.153.111', '244.3.153.117', '244.3.153.142', '244.3.153.156', '244.3.153.204', '244.3.153.209', '244.3.153.239', '244.3.153.241', '244.3.153.247', '244.3.153.248', '244.3.153.252', '244.3.154.13', '244.3.155.77', '244.3.157.84', '244.3.160.80', '244.3.160.128', '244.3.160.181', '244.3.160.239', '244.3.160.248', '244.3.160.254', '244.3.164.39', '244.3.164.46', '244.3.164.71', '244.3.164.100', '244.3.164.124', '244.3.164.145', '244.3.164.157', '244.3.164.213', '244.3.165.94', '244.3.165.213', '244.3.165.225', '244.3.176.118', '244.3.176.149', '244.3.176.224', '244.3.177.12', '244.3.177.23', '244.3.177.71', '244.3.177.77', '244.3.177.84', '244.3.177.117', '244.3.177.130', '244.3.177.142', '244.3.177.145', '244.3.177.151', '244.3.177.193', '244.3.180.57', '244.3.180.152', '244.3.180.219', '244.3.181.123', '244.3.181.142', '244.3.185.22', '244.3.185.25', '244.3.185.40', '244.3.185.47', '244.3.185.67', '244.3.185.68', '244.3.185.75', '244.3.185.83', '244.3.185.84', '244.3.185.95', '244.3.185.108', '244.3.185.117', '244.3.185.139', '244.3.185.142', '244.3.185.150', '244.3.185.176', '244.3.185.177', '244.3.185.184', '244.3.185.201', '244.3.185.208', '244.3.185.209', '244.3.185.214', '244.3.185.224', '244.3.185.225', '244.3.185.239', '244.3.185.241', '244.3.185.244', '244.3.185.254', '244.3.186.204', '244.3.186.241', '244.3.199.26', '244.3.199.39', '244.3.199.51', '244.3.199.111', '244.3.199.165', '244.3.199.180', '244.3.199.218', '244.3.210.90', '244.3.210.98', '244.3.210.176', '244.3.210.197', '244.3.210.244', '244.3.210.255', '244.3.213.210', '244.3.213.222', '244.3.213.252', '244.3.218.43', '244.3.218.176', '244.3.218.223', '244.3.219.116', '244.3.219.255', '244.3.223.164', '244.3.224.127', '244.3.224.153', '244.3.225.67', '244.3.225.176', '244.3.231.106', '244.3.241.204', '244.3.246.71', '244.3.249.219', '244.3.253.210', '244.3.253.224', '244.41.38.43', '244.43.108.186', '244.55.201.159', '244.67.211.145', '244.91.47.38', '244.93.229.57', '244.95.75.34', '244.102.167.142', '244.106.85.43', '244.106.113.46', '244.108.142.64', '244.108.194.56', '244.111.165.210', '244.123.225.23', '244.150.152.117', '244.153.111.194', '244.157.67.98', '244.157.116.90', '244.157.156.98', '244.157.253.57', '244.176.48.57', '244.176.48.167', '244.186.155.13', '244.188.47.184', '244.193.156.82', '244.193.192.61', '244.198.135.244', '244.199.100.224', '244.204.68.193', '244.205.67.201', '244.205.225.77', '244.208.23.159', '244.211.249.18', '244.239.197.117', '244.239.197.167', '244.242.77.84', '244.244.229.84', '244.253.157.163', '246.71.220.94', '246.142.202.211', '246.176.181.203', '246.208.117.106', '246.208.117.213', '246.220.26.95', '246.224.118.39', '249.18.39.225', '249.108.106.18', '249.197.210.41', '249.254.244.123', '252.66.57.67', '252.68.71.184', '252.77.177.67', '252.110.41.194', '252.120.223.77', '252.201.84.41', '252.241.38.85', '253.37.253.43', '253.37.253.121', '253.37.253.139', '253.37.253.167', '253.160.108.89', '253.160.108.127', '253.160.108.225', '254.4.3.41', '254.20.46.210', '254.26.38.130', '254.26.132.64', '254.26.157.67', '254.26.157.127', '254.26.157.218', '254.26.202.15', '254.26.202.67', '254.39.117.253', '254.39.159.185', '254.40.156.145', '254.40.224.17', '254.40.225.0', '254.40.235.168', '254.41.186.34', '254.47.4.34', '254.47.225.160', '254.51.75.100', '254.57.4.116', '254.68.186.218', '254.71.85.201', '254.71.90.144', '254.71.117.213', '254.71.185.26', '254.71.192.181', '254.71.208.31', '254.71.253.145', '254.77.161.108', '254.84.176.77', '254.98.75.202', '254.111.211.0', '254.111.211.197', '254.117.56.72', '254.142.20.31', '254.157.154.77', '254.160.163.72', '254.161.111.231', '254.181.202.211', '254.185.121.116', '254.194.155.98', '254.194.155.203', '254.204.39.13', '254.204.39.151', '254.204.128.89', '254.204.205.197', '254.204.210.149', '254.204.210.215', '254.204.217.80', '254.204.225.37', '254.204.225.113', '254.214.213.72', '254.220.246.145', '254.224.83.141', '254.224.130.117', '254.231.68.128'};
host_ip = table(nodeName(1+coreSw+aggrSw+edgeSw:coreSw+aggrSw+edgeSw+host).', 'RowNames', IP.');
host_ip.Properties.VariableNames = {'Host'};

link_if = table(srcNode, dstNode, srcInf, dstInf);
link_if.Properties.VariableNames = {'Src_Node', 'Dst_Node', 'Src_Inf', 'Dst_Inf'};

sw_struct = struct([]);
for i = 1:coreSw+aggrSw+edgeSw
   sw_struct(i).name =  nodeName{i};
   sw_struct(i).entry = struct([]);
end

link = g.Edges;
link.Load = zeros(length(link.Weight),1);

link_struct = struct([]);
for i = 1:size(link, 1)
    link_struct(i).entry = struct([]);
end

link_struct_temp = link_struct;

[start_date_time, end_date_time, srcip, dstip, srcport, dstport, protocol, bytes, group] = textread('elephantFlow_4.csv', '%s%s%s%s%d%d%s%d%d', 'delimiter', ',');
flow_table = table(start_date_time, end_date_time, srcip, dstip, srcport, dstport, protocol, bytes, group);
flow_table = sortrows(flow_table, 'start_date_time');

flow = struct();

%size(flow_table, 1)
for i = 1:size(flow_table, 1)
    i
    if i == 2251
        'QQ'
    end
    src_name = host_ip{flow_table{i,'srcip'}{1}, 'Host'}{1};
    dst_name = host_ip{flow_table{i,'dstip'}{1}, 'Host'}{1};
    
    rows = strcmp(link_if.Src_Node, src_name) & (link_if.Src_Inf == 1);
    sw = findnode(g, link_if(rows, {'Dst_Node'}).(1));
    
    duration = seconds(datetime(flow_table{i, 'end_date_time'}{1}, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') - datetime(flow_table{i, 'start_date_time'}{1}, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
    rate = flow_table{i, 'bytes'}(1) / duration;
    
    flow.dst_name = dst_name;
    flow.rate = rate;
    
    flow_entry = struct();
    
    flow_entry.start_time = datestr(datetime(flow_table{i, 'start_date_time'}{1}, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS'), 'yyyy-mm-dd HH:MM:ss.FFF');
    flow_entry.end_time = datestr(datetime(flow_table{i, 'end_date_time'}{1}, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') + seconds(60), 'yyyy-mm-dd HH:MM:ss.FFF');
    
    flow_entry = setFlowEntryForPerflow(flow_entry, flow_table, i);
    %flow_entry = setFlowEntryForCluster(flow_entry, flow_table, i);
    
    flow_entry.protocol = flow_table{i, 'protocol'}{1};
    
    original_end_time = datestr(datetime(flow_table{i, 'end_date_time'}{1}, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS'), 'yyyy-mm-dd HH:MM:ss.FFF');
    
    rows = strcmp(link_if.Src_Node, src_name) & strcmp(link_if.Dst_Node, nodeName{sw});
    flow_entry.input = link_if(rows, {'Dst_Inf'}).(1);
    
    first_node = findnode(g, src_name);
    final_path = first_node;
    
    for j = 1:size(link, 1)
        if isempty(link_struct_temp(j).entry)
            continue
        end
        
        rows = (datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') >= datetime({link_struct_temp(j).entry.start_time}', 'Format', 'yyyy-MM-dd HH:mm:ss.SSS')) & (datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') < datetime({link_struct_temp(j).entry.end_time}', 'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
        if length(find(rows == 1)) > 1
            'QQ'
        end
        
        if ~any(rows)
            continue
        end
        
        link(j, {'Load'}) = {link_struct_temp(j).entry(rows).load};
    end
        
    final_path = processPkt(sw, flow_entry, dst_name, final_path);
    
    if (final_path(1) ~= findnode(g, src_name)) || (final_path(length(final_path)) ~= findnode(g, dst_name))
        'QQ'
    end
    
    for j = 1:length(final_path)-1
        edge = findedge(g, final_path(j), final_path(j+1));
        
        k_ = length(link_struct(edge).entry);
        
        lower = -1;
        upper = -1;
        
        if isempty(link_struct(edge).entry)
        else
            for m = preLower(edge):length(link_struct(edge).entry)
                if (datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') >= datetime(link_struct(edge).entry(m).start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS')) && (datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') < datetime(link_struct(edge).entry(m).end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS'))
                    lower = m;
                end
                
                if (datetime(original_end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') >= datetime(link_struct(edge).entry(m).start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS')) && (datetime(original_end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') < datetime(link_struct(edge).entry(m).end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS'))
                    upper = m;
                end
            end
            
            %{
            rows = (datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') >= datetime({link_struct(edge).entry.start_time}', 'Format', 'yyyy-MM-dd HH:mm:ss.SSS')) & (datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') < datetime({link_struct(edge).entry.end_time}', 'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
            if find(rows == 1)
                lower = (find(rows == 1));
            end
            
            rows = (datetime(original_end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') >= datetime({link_struct(edge).entry.start_time}', 'Format', 'yyyy-MM-dd HH:mm:ss.SSS')) & (datetime(original_end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS') < datetime({link_struct(edge).entry.end_time}', 'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
            if find(rows == 1)
                upper = (find(rows == 1));
            end
            %}
        end
        
        if lower == -1 && upper == -1
            link_struct(edge).entry(k_+1).start_time = flow_entry.start_time;
            link_struct(edge).entry(k_+1).end_time = original_end_time;
            link_struct(edge).entry(k_+1).load = rate;
        elseif lower == upper && upper ~= -1
            link_struct(edge).entry(k_+1).start_time = flow_entry.start_time;
            link_struct(edge).entry(k_+1).end_time = original_end_time;
            link_struct(edge).entry(k_+1).load = rate +  link_struct(edge).entry(lower).load;
            
            link_struct(edge).entry(k_+2).start_time = original_end_time;
            link_struct(edge).entry(k_+2).end_time = link_struct(edge).entry(lower).end_time;
            link_struct(edge).entry(k_+2).load = link_struct(edge).entry(lower).load;           
            
            if strcmp(link_struct(edge).entry(lower).start_time, flow_entry.start_time)
                link_struct(edge).entry(lower) = [];
            else
                link_struct(edge).entry(lower).end_time = flow_entry.start_time;
            end
        elseif lower == k_ && upper == -1
            link_struct(edge).entry(k_+1).start_time = link_struct(edge).entry(lower).end_time;
            link_struct(edge).entry(k_+1).end_time = original_end_time;
            link_struct(edge).entry(k_+1).load = rate;
            
            link_struct(edge).entry(k_+2).start_time = flow_entry.start_time;
            link_struct(edge).entry(k_+2).end_time = link_struct(edge).entry(lower).end_time;
            link_struct(edge).entry(k_+2).load = rate +  link_struct(edge).entry(lower).load;
            
            if strcmp(link_struct(edge).entry(lower).start_time, flow_entry.start_time)
                link_struct(edge).entry(lower) = [];
            else
                link_struct(edge).entry(lower).end_time = flow_entry.start_time;
            end
        elseif lower < upper || upper == -1
            if upper == -1
                for n = lower+1:k_
                    link_struct(edge).entry(n).load = rate + link_struct(edge).entry(n).load;
                end
                
                link_struct(edge).entry(k_+1).start_time = link_struct(edge).entry(k_).end_time;
                link_struct(edge).entry(k_+1).end_time = original_end_time;
                link_struct(edge).entry(k_+1).load = rate;
            else
                for n = lower+1:upper-1
                    link_struct(edge).entry(n).load = rate + link_struct(edge).entry(n).load;
                end

                link_struct(edge).entry(k_+1).start_time = original_end_time;
                link_struct(edge).entry(k_+1).end_time = link_struct(edge).entry(upper).end_time;
                link_struct(edge).entry(k_+1).load = link_struct(edge).entry(upper).load;
                
                link_struct(edge).entry(upper).end_time = original_end_time;
                link_struct(edge).entry(upper).load = rate + link_struct(edge).entry(upper).load;
            end
            
            link_struct(edge).entry(k_+2).start_time = flow_entry.start_time;
            link_struct(edge).entry(k_+2).end_time = link_struct(edge).entry(lower).end_time;
            link_struct(edge).entry(k_+2).load = rate +  link_struct(edge).entry(lower).load;
            
            if strcmp(link_struct(edge).entry(lower).start_time, flow_entry.start_time)
                link_struct(edge).entry(lower) = [];
            else
                link_struct(edge).entry(lower).end_time = flow_entry.start_time;
            end
        else
            'QQ'
        end
        
        [tmp, ind] = sortrows({link_struct(edge).entry.start_time}');
        link_struct(edge).entry = link_struct(edge).entry(ind);
        
        if lower == -1 && upper == -1
            link_struct_temp(edge).entry = link_struct(edge).entry(length(link_struct(edge).entry));
            preLower(edge) = length(link_struct(edge).entry);
        else
            link_struct_temp(edge).entry = link_struct(edge).entry(lower:length(link_struct(edge).entry));
            preLower(edge) = lower;
        end
    end
end

% change 01:32 to 01:33
DateStrings = {'2009-12-18 00:26', '2009-12-18 00:48'; '2009-12-18 00:48', '2009-12-18 01:10'; '2009-12-18 01:10', '2009-12-18 01:33'};
t = datetime(DateStrings,'InputFormat','yyyy-MM-dd HH:mm');

start_time = [];
end_time = [];
slot_num = [];

for i = 1:length(t)
   start_time(i) = t(i,1).Hour*3600 + t(i,1).Minute*60;
   end_time(i) = t(i,2).Hour*3600 + t(i,2).Minute*60;
   slot_num(i) = (end_time(i) - start_time(i)) / 60;
end

all_slot = slot_num(1) + slot_num(2) + slot_num(3);
final_mean_size = zeros(1, all_slot);
final_sw_size = zeros(1, all_slot);

for sw = 1:coreSw+aggrSw+edgeSw
    if isempty(sw_struct(sw).entry)
        continue
    else
        flow_loc = [];
        for i = 1:length(sw_struct(sw).entry)
            flow_time_string = {sw_struct(sw).entry(i).start_time, sw_struct(sw).entry(i).end_time};
            flow_time = datetime(flow_time_string,'Format','yyyy-MM-dd HH:mm:ss.SSS');

            flow_start_time = flow_time(1).Hour*3600 + flow_time(1).Minute*60 + flow_time(1).Second;
            flow_end_time = flow_time(2).Hour*3600 + flow_time(2).Minute*60 + flow_time(2).Second;

            sloc = floor((flow_start_time - start_time(1)) / 60) + 1;
            eloc = floor((flow_end_time - start_time(1)) / 60) + 1;
            
            flow_loc = [flow_loc, (sloc:eloc)];

            final_mean_size(sloc:eloc) = final_mean_size(sloc:eloc) + 1;
        end
        final_sw_size(unique(flow_loc)) = final_sw_size(unique(flow_loc)) + 1;
    end
end

final_mean_size = final_mean_size./final_sw_size;
final_mean_size = round(final_mean_size);

formatOut = 'HH:MM';
begin = 1;
max_size = max(final_mean_size);
for i = 1:length(t)
    x = arrayfun(@(x) x+0.5, (1:slot_num(i)));
    y = final_mean_size(begin:begin+slot_num(i)-1);
    begin = begin + slot_num(i);
    
    b = bar(x,y);
    
    title(['Fat Tree, k = ', int2str(k), 10, 'Time Range: ', datestr(t(i,1),formatOut), ' ~ ', datestr(t(i,2),formatOut), 10])
    
    set(gca, 'xtick', (0:1:length(x)+1))
    set(gca, 'ytick', (0:1:max(y)))
    set(gca, 'ylim', [0 max(y)])
    
    set(gca, 'YTickLabel', {});
    
    set(gca, 'FontSize', 12)
       
    label = cellstr(string(y));
    label(cellfun(@(x) isequal(x, '0'), label)) = {''};

    text(x, y, label, 'HorizontalAlignment', 'center', 'VerticalAlignment', 'bottom')

    xlabel('Time')
    ylabel('Flow Rule Numbers')
    
    saveas(b, strcat(int2str(i), '.png'))
end


function flow_entry = setFlowEntryForPerflow(flow_entry, flow_table, i)
    flow_entry.src_ip = flow_table{i, 'srcip'}{1};
    flow_entry.dst_ip = flow_table{i,'dstip'}{1};
    flow_entry.src_port = flow_table{i, 'srcport'}(1);
    flow_entry.dst_port = flow_table{i, 'dstport'}(1);
end

function flow_entry = setFlowEntryForCluster(flow_entry, flow_table, i)
    sip = strsplit(flow_table{i, 'srcip'}{1}, '.');
    dip = strsplit(flow_table{i, 'dstip'}{1}, '.');
    
    if flow_table{i, 'group'}(1) == 1
        flow_entry.src_ip = [sip{1}, '.0.0.0'];
        flow_entry.dst_ip = [dip{1}, '.0.0.0'];
    elseif flow_table{i, 'group'}(1) == 2
        flow_entry.src_ip = [sip{1}, '.', sip{2}, '.0.0'];
        flow_entry.dst_ip = [dip{1}, '.', dip{2}, '.0.0'];
    elseif flow_table{i, 'group'}(1) == 3
        flow_entry.src_ip = [sip{1}, '.', sip{2}, '.', sip{3}, '.0'];
        flow_entry.dst_ip = [dip{1}, '.', dip{2}, '.', dip{3}, '.0'];
    else
        flow_entry.src_ip = flow_table{i, 'srcip'}{1};
        flow_entry.dst_ip = flow_table{i, 'dstip'}{1};
    end
end

function final_path = processPkt(sw, flow_entry, dst_name, final_path)  
    global g
    global flow
    global link
    global link_if
    global nodeName
    global sw_struct
    
    if sw == findnode(g, dst_name)
        final_path = [final_path sw];
        return
    end
    
    flow_compare = arrayfun(@(x) isequal(flow_entry.src_ip, x.src_ip) & isequal(flow_entry.dst_ip, x.dst_ip) & isequal(flow_entry.src_port, x.src_port) & isequal(flow_entry.dst_port, x.dst_port) & isequal(flow_entry.protocol, x.protocol) & isequal(flow_entry.input, x.input), sw_struct(sw).entry);
    if ~any(flow_compare)
        %path = shortestpath(g, nodeName{sw}, dst_name, 'Method', 'positive');
        flow.src_name = nodeName{sw};
        [path, link] = firstFitFlowScheduling_mod(g, flow, link);
        final_path = [final_path path];
        
        temp_path = {};
        for i = 1:length(path)
            temp_path = [temp_path nodeName{path(i)}];
        end
        
        path = temp_path;

        rows = strcmp(link_if.Src_Node, nodeName{sw}) & strcmp(link_if.Dst_Node, path{2});
        flow_entry.output = link_if(rows, {'Src_Inf'}).(1);

        k_ = length(sw_struct(sw).entry);
        if k_ == 0
            sw_struct(sw).entry = flow_entry;
        else
            sw_struct(sw).entry(k_+1) = flow_entry;
        end

        installFlowRule(path, flow_entry)
    else
        same_flow_loc = find(flow_compare == 1);
        same_flow_loc = same_flow_loc(end);
        old_flow_e_time = datetime(sw_struct(sw).entry(same_flow_loc).end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
        new_flow_s_time = datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
        new_flow_e_time = datetime(flow_entry.end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
        if new_flow_s_time - old_flow_e_time > seconds(60)
            %path = shortestpath(g, nodeName{sw}, dst_name, 'Method', 'positive');
            flow.src_name = nodeName{sw};
            [path, link] = firstFitFlowScheduling_mod(g, flow, link);
            final_path = [final_path path];
            
            temp_path = {};
            for i = 1:length(path)
                temp_path = [temp_path nodeName{path(i)}];
            end

            path = temp_path;

            rows = strcmp(link_if.Src_Node, nodeName{sw}) & strcmp(link_if.Dst_Node, path{2});
            flow_entry.output = link_if(rows, {'Src_Inf'}).(1);

            k_ = length(sw_struct(sw).entry);
            sw_struct(sw).entry(k_+1) = flow_entry;

            installFlowRule(path, flow_entry)
        else
            final_path = [final_path sw];
            sw_struct(sw).entry(same_flow_loc).end_time = datestr(max(old_flow_e_time, new_flow_e_time), 'yyyy-mm-dd HH:MM:ss.FFF');
            
            rows = strcmp(link_if.Src_Node, nodeName{sw}) & (link_if.Src_Inf == sw_struct(sw).entry(same_flow_loc).output);
            sw = findnode(g, link_if(rows, {'Dst_Node'}).(1));
            flow_entry.input = link_if(rows, {'Dst_Inf'}).(1);
            
            final_path = processPkt(sw, flow_entry, dst_name, final_path);
        end
    end
end

function installFlowRule(path, flow_entry)
    global g
    global link_if
    global sw_struct
    
    for j = 2:length(path)-1
        rows = strcmp(link_if.Src_Node, path{j-1}) & strcmp(link_if.Dst_Node, path{j});
        flow_entry.input = link_if(rows, {'Dst_Inf'}).(1);

        rows = strcmp(link_if.Src_Node, path{j}) & strcmp(link_if.Dst_Node, path{j+1});
        flow_entry.output = link_if(rows, {'Src_Inf'}).(1);

        sw = findnode(g, path{j});

        flow_compare = arrayfun(@(x) isequal(flow_entry.src_ip, x.src_ip) & isequal(flow_entry.dst_ip, x.dst_ip) & isequal(flow_entry.src_port, x.src_port) & isequal(flow_entry.dst_port, x.dst_port) & isequal(flow_entry.protocol, x.protocol) & isequal(flow_entry.input, x.input) & isequal(flow_entry.output, x.output), sw_struct(sw).entry);
        if ~any(flow_compare)
            k_ = length(sw_struct(sw).entry);
            if k_ == 0
                sw_struct(sw).entry = flow_entry;
            else
                sw_struct(sw).entry(k_+1) = flow_entry;
            end
        else
            same_flow_loc = find(flow_compare == 1);
            same_flow_loc = same_flow_loc(end);
            old_flow_e_time = datetime(sw_struct(sw).entry(same_flow_loc).end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
            new_flow_s_time = datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
            new_flow_e_time = datetime(flow_entry.end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
            if new_flow_s_time - old_flow_e_time > seconds(60)
                k_ = length(sw_struct(sw).entry);
                sw_struct(sw).entry(k_+1) = flow_entry;
            else
                sw_struct(sw).entry(same_flow_loc).end_time = datestr(max(old_flow_e_time, new_flow_e_time), 'yyyy-mm-dd HH:MM:ss.FFF');
            end
        end
    end
end

%{
function final_path = processPkt(sw, flow_entry, dst_name, final_path)
    global g
    global IP
    global flow
    global link
    global link_if
    global nodeName
    global sw_struct    
    global sw_number
    
    
    rows = strcmp(link_if.Src_Node, dst_name) & (link_if.Src_Inf == 1);
    if sw == findnode(g, link_if(rows, {'Dst_Node'}).(1))
        flow_entry.dst_ip = IP{findnode(g, dst_name) - sw_number};
    end
    
    if sw == findnode(g, dst_name)
        final_path = [final_path sw];
        return
    end
    
    flow_compare = arrayfun(@(x) isequal(flow_entry.src_ip, x.src_ip) & isequal(flow_entry.dst_ip, x.dst_ip) & isequal(flow_entry.protocol, x.protocol) & isequal(flow_entry.input, x.input), sw_struct(sw).entry);
    if ~any(flow_compare)
        flow.src_name = nodeName{sw};
        [path, link] = firstFitFlowScheduling_mod(g, flow, link);
        final_path = [final_path path];
        
        temp_path = {};
        for i = 1:length(path)
            temp_path = [temp_path nodeName{path(i)}];
        end
        
        path = temp_path;

        rows = strcmp(link_if.Src_Node, nodeName{sw}) & strcmp(link_if.Dst_Node, path{2});
        flow_entry.output = link_if(rows, {'Src_Inf'}).(1);

        k_ = length(sw_struct(sw).entry);
        if k_ == 0
            sw_struct(sw).entry = flow_entry;
        else
            sw_struct(sw).entry(k_+1) = flow_entry;
        end

        installFlowRule(path, flow_entry, dst_name)
    else
        same_flow_loc = find(flow_compare == 1);
        same_flow_loc = same_flow_loc(end);
        old_flow_e_time = datetime(sw_struct(sw).entry(same_flow_loc).end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
        new_flow_s_time = datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
        new_flow_e_time = datetime(flow_entry.end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
        if new_flow_s_time - old_flow_e_time > seconds(60)
            flow.src_name = nodeName{sw};
            [path, link] = firstFitFlowScheduling_mod(g, flow, link);
            final_path = [final_path path];

            temp_path = {};
            for i = 1:length(path)
                temp_path = [temp_path nodeName{path(i)}];
            end

            path = temp_path;

            rows = strcmp(link_if.Src_Node, nodeName{sw}) & strcmp(link_if.Dst_Node, path{2});
            flow_entry.output = link_if(rows, {'Src_Inf'}).(1);

            k_ = length(sw_struct(sw).entry);
            sw_struct(sw).entry(k_+1) = flow_entry;

            installFlowRule(path, flow_entry, dst_name)
        else
            final_path = [final_path sw];
            sw_struct(sw).entry(same_flow_loc).end_time = datestr(max(old_flow_e_time, new_flow_e_time), 'yyyy-mm-dd HH:MM:ss.FFF');
            
            rows = strcmp(link_if.Src_Node, nodeName{sw}) & (link_if.Src_Inf == sw_struct(sw).entry(same_flow_loc).output);
            sw = findnode(g, link_if(rows, {'Dst_Node'}).(1));
            flow_entry.input = link_if(rows, {'Dst_Inf'}).(1);

            final_path = processPkt(sw, flow_entry, dst_name, final_path);
        end
    end
end

function installFlowRule(path, flow_entry, dst_name)
    global g
    global link_if
    global sw_struct
    global IP
    global sw_number
    
    for j = 2:length(path)-1
        if j == length(path)-1
            flow_entry.dst_ip = IP{findnode(g, dst_name) - sw_number};
        end
    
        rows = strcmp(link_if.Src_Node, path{j-1}) & strcmp(link_if.Dst_Node, path{j});
        flow_entry.input = link_if(rows, {'Dst_Inf'}).(1);

        rows = strcmp(link_if.Src_Node, path{j}) & strcmp(link_if.Dst_Node, path{j+1});
        flow_entry.output = link_if(rows, {'Src_Inf'}).(1);

        sw = findnode(g, path{j});

        flow_compare = arrayfun(@(x) isequal(flow_entry.src_ip, x.src_ip) & isequal(flow_entry.dst_ip, x.dst_ip) & isequal(flow_entry.protocol, x.protocol) & isequal(flow_entry.input, x.input) & isequal(flow_entry.output, x.output), sw_struct(sw).entry);
        if ~any(flow_compare)
            k_ = length(sw_struct(sw).entry);
            if k_ == 0
                sw_struct(sw).entry = flow_entry;
            else
                sw_struct(sw).entry(k_+1) = flow_entry;
            end
        else
            same_flow_loc = find(flow_compare == 1);
            same_flow_loc = same_flow_loc(end);
            old_flow_e_time = datetime(sw_struct(sw).entry(same_flow_loc).end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
            new_flow_s_time = datetime(flow_entry.start_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
            new_flow_e_time = datetime(flow_entry.end_time, 'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
            if new_flow_s_time - old_flow_e_time > seconds(60)
                k_ = length(sw_struct(sw).entry);
                sw_struct(sw).entry(k_+1) = flow_entry;
            else
                sw_struct(sw).entry(same_flow_loc).end_time = datestr(max(old_flow_e_time, new_flow_e_time), 'yyyy-mm-dd HH:MM:ss.FFF');
            end
        end
    end
end
%}